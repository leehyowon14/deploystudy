name: Spring Boot & Gradle CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

# 환경 변수 설정
env:
  S3_BUCKET_NAME: likelion-assignment
  ZIP_FILE_NAME: deploy-package.zip
  APPLICATION_NAME: deploystudy  # AWS CodeDeploy 애플리케이션 이름
  DEPLOYMENT_GROUP_NAME: deploy-group  # AWS CodeDeploy 배포 그룹 이름

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # 저장소 코드 가져오기
      - name: Checkout Source Code
        uses: actions/checkout@v3

      # JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      # 시크릿에서 application.yml 파일 생성
      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml

      # 실행 권한 부여 & 빌드 실행
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # test 제외 빌드
      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test

      # 배포용 디렉토리 생성
      - name: Create deploy directory
        run: mkdir -p deploy

      # 빌드된 JAR 파일 복사
      - name: Copy Jar file to deploy directory
        run: cp ./build/libs/*.jar ./deploy

      # appspec.yml 복사
      - name: Copy appspec.yml to deploy directory
        run: cp appspec.yml ./deploy

      # 배포 스크립트 복사
      - name: Copy deploy script to deploy directory
        run: cp ./scripts/*.sh ./deploy

      # ZIP 파일 생성
      - name: Compress deploy files
        run: zip -r ./$ZIP_FILE_NAME ./deploy
        shell: bash

      # AWS 인증 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # S3에 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$ZIP_FILE_NAME s3://$S3_BUCKET_NAME/

      # AWS CodeDeploy 배포 실행
      - name: Deploy to AWS CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name $APPLICATION_NAME \
            --deployment-group-name $DEPLOYMENT_GROUP_NAME \
            --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$ZIP_FILE_NAME